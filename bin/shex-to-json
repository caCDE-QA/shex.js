#!/usr/bin/env node

// shex-to-json http://tracker.example/schemas/Issue.shex

var ShExLoader = require("../lib/ShExLoader"); // for verbose output

// Generate command line interface
var CLI = require("command-line-args")([
    { name: "help",  alias: "h", type: Boolean },
    { name: "shex",  alias: "x", type: String, multiple:  true, defaultValue:   [], defaultOption:  true },
    { name: "json",  alias: "j", type: String, multiple:  true, defaultValue:   [] }
]);
function abort (msg) {
  console.error(msg);
  console.error(CLI.getUsage({
    title: "shex-to-json",
    description: "load some number of schema files from web or filesystem and display as JSON (ShExJ), for example:\n    shex-to-json http://tracker.example/schemas/Issue.shex",
    footer: "Project home: [underline]{https://github.com/shexSpec/shex.js}"
  }));
  process.exit(1);
}

// Extract user commands
var cmds = CLI.parse();
if (cmds.help)
    abort("");
if (cmds.shex.length === 0 && cmds.json.length === 0) abort("no shex specified");


ShExLoader.load(cmds.shex, cmds.json, [], []).then(function (loaded) {
  console.log('%s', JSON.stringify(loaded.schema, null, '  '));
}).catch(function (e) {
  console.error("aborting:", e.stack || e);
  process.exit(1);
})
